{"name":"Cloner","tagline":"Cloning ES5+ objects in a shallow or deep way","body":"cloner [![build status](https://secure.travis-ci.org/WebReflection/cloner.svg)](http://travis-ci.org/WebReflection/cloner)\r\n==============\r\n\r\nAn ES5+ compatible utility to deep or shallow copy and merge objects.\r\n\r\n### API\r\nThe module has two sub modules: `shallow` and `deep`.\r\nBoth of them will have two methods: `copy` and `merge`.\r\n\r\n#### cloner.shallow.copy(object):shallowCopy\r\nWill loop over all own keys and copy them to a new object. The equivalent operation can be described as such:\r\n\r\n```js\r\n// it's based on descriptors\r\nObject.defineProperties(\r\n  // it preserves inheritance\r\n  Object.create(\r\n    Object.getPrototypeOf(source)\r\n  ),\r\n  // it does shallow copy\r\n  Reflect.ownKeys(source).reduce(function (d, k) {\r\n    d[k] = Object.getOwnPropertyDescriptor(source, k);\r\n  }, {})\r\n  // or Reflect.getOwnPropertyDescriptors(source)\r\n);\r\n```\r\nThe `cloner.shallow.copy` utility is most likely what you are looking for instead of the underpowered `Object.assign` one.\r\n\r\n#### cloner.shallow.merge(target, source1[, source2, sourceN]):target\r\nPreserves what's already in the `target` and merge all own keys found in one or more passed sources.\r\n```js\r\nvar a = {a: 1, b: 2};\r\nvar b = cloner.shallow.merge({a: 3}, a);\r\n\r\nb; // {a: 3, b: 2}\r\n```\r\nProbably the best option to merge states, ideal for statics or immutable properties.\r\n\r\n\r\n#### cloner.deep.copy(object):deepCopy\r\nSame as `cloner.shallow.copy` beside the fact every single own key will be deeply copied.\r\nLike its shallow counterpart, it does preserve inheritance and it's **recursion aware**, meaning it shouldn't fail with recursive properties, as already [tested](test/cloner.js).\r\n\r\n\r\n### How to use\r\n`npm install cloner` should do, otherwise [grab the file you like the most](build/) in here.\r\n\r\n### License\r\n```\r\n\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}